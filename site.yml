- hosts: all
  become: true
  vars_files:
    - vars/site_vars.yml

  tasks:
    # Install Mongodb
    - name: Add an Mongodb Apt signing key
      tags: mongodb
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-5.0.asc
        state: present

    - name: Add Mongodb into sources list
      tags: mongodb, sources-list
      apt_repository:
        repo: deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu {{ansible_distribution_release}}/mongodb-org/5.0 multiverse
        state: present

    - name: Add Nodejs 16 PPA to sources list
      tags: nodejs, sources-list
      shell: "curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -"

    - name: Update apt cache
      apt: update_cache=yes

    - name: Install mongodb, redis, nodejs, python3-pip, nginx
      tags: install, mongodb, redis, nodejs, python3-pip, nginx
      apt:
        pkg:
          - mongodb-org
          - redis-server
          - python3-pip
          - nodejs
          - nginx

    - name: Start mongod service and enable at startup
      tags: mongodb, service, start
      service:
        name: mongod
        state: started
        enabled: yes

    # pymongo is required for setting up user in Mongodb
    - name: Install the latest pymongo package
      tags: mongodb, pymongo
      pip: name=pymongo state=latest

    - name: Create MongoDB root user
      tags: mongodb, create-db-user
      mongodb_user:
        login_port: 27017
        database: admin
        name: root
        password: "{{ mongodb_password }}"
        roles: root
      register: result
      # ignore failure on 'authentication errors' because we have already created a user
      failed_when:
        - result.changed == false
        - '"Unable to add or update user: command createUser requires authentication" not in result.msg'

    - name: Enable Mongodb authorization
      tags: mongodb, enable-authorization
      blockinfile:
        path: /etc/mongod.conf
        insertafter: "#security:"
        block: |
          security:
              authorization: enabled

    - name: Restart mongod service
      tags: mongodb, service, restart
      service:
        name: mongod
        state: restarted

    - name: Configure Redis to use systemd
      tags: redis, systemd
      lineinfile:
        path: /etc/redis/redis.conf
        state: present
        regexp: "^supervised"
        line: "supervised systemd"

    - name: Start redis service and enable at startup
      tags: redis, service, start
      service:
        name: redis.service
        state: started
        enabled: yes

    - name: Set Redis admin password
      tags: redis, password
      lineinfile:
        path: /etc/redis/redis.conf
        state: present
        regexp: "# requirepass"
        line: "requirepass {{ redis_password }}"

    - name: Restart redis service
      tags: redis, service, restart
      service:
        name: redis.service
        state: restarted

    - name: UFW - Allow Nginx HTTP connections
      tags: nginx, http, ufw, firewall
      ufw:
        rule: allow
        name: Nginx HTTP
